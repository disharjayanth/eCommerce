{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Meta.js","components/Rating.js","components/Product.js","components/Loader.js","components/Paginate.js","components/Message.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderAction.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","className","name","onChange","target","value","placeholder","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Meta","description","keywords","Helmet","content","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","Message","children","Alert","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","Number","countInStock","disabled","length","productId","review","post","Group","controlId","Label","row","toString","createdAt","substr","addToCart","setItem","stringify","CartScreen","location","search","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","stripped","bordered","hover","responsive","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","formData","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","successPay","loadingPay","successDeliver","loadingDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","currency","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","striped","UserEditScreen","userId","setIsAdmin","successUpdate","loadingUpdate","errorUpdate","submitHandler","updateUser","control","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","FormData","append","console","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.157fff6a.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderDeliverReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage,\n  },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_RESET,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { ...state, loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { ...state, loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case PRODUCT_DETAILS_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { ...state, loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        product: action.payload,\n      }\n    case PRODUCT_CREATE_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        product: action.payload,\n      }\n    case PRODUCT_UPDATE_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { ...state, loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { ...state, loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { ...state, loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_DETAILS_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_FAIL,\n  USER_DELETE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { ...state, loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { ...state, loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case USER_LOGIN_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { ...state, loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { ...state, loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { ...state, loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { ...state, user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { ...state, loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        userInfo: action.payload,\n        success: true,\n      }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { ...state, loading: true }\n    case USER_LIST_SUCCESS:\n      return { ...state, loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { ...state, users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { ...state, loading: true }\n    case USER_DELETE_SUCCESS:\n      return { ...state, loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { ...state, loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { ...state, loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGIN_LOGOUT = 'USER_LOGIN_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_RESET,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return { ...state, loading: true }\n    case ORDER_CREATE_SUCCESS:\n      return { ...state, loading: false, success: true, order: action.payload }\n    case ORDER_CREATE_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case ORDER_DETAILS_SUCCESS:\n      return { ...state, loading: false, order: action.payload }\n    case ORDER_DETAILS_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case ORDER_DETAILS_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return { ...state, loading: true }\n    case ORDER_PAY_SUCCESS:\n      return { ...state, loading: false, success: true }\n    case ORDER_PAY_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return { ...state, loading: true }\n    case ORDER_DELIVER_SUCCESS:\n      return { ...state, loading: false, success: true }\n    case ORDER_DELIVER_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\n// this reducer displays list of all orders of logged in user\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return { ...state, loading: true }\n    case ORDER_LIST_MY_SUCCESS:\n      return { ...state, loading: false, orders: action.payload }\n    case ORDER_LIST_MY_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    case ORDER_LIST_MY_RESET:\n      return { ...state, orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return { ...state, loading: true }\n    case ORDER_LIST_SUCCESS:\n      return { ...state, loading: false, orders: action.payload }\n    case ORDER_LIST_FAIL:\n      return { ...state, loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_LOGOUT,\n  USER_LOGIN_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_SUCCESS,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_DETAILS_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\nimport axios from 'axios'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  dispatch({\n    type: USER_LOGIN_LOGOUT,\n  })\n  dispatch({\n    type: USER_DETAILS_RESET,\n  })\n  dispatch({\n    type: ORDER_LIST_MY_RESET,\n  })\n  dispatch({\n    type: USER_LIST_RESET,\n  })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put('/api/users/profile', user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    })\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        className=\"mr-sm-2 ml-sm-5\"\n        type=\"text\"\n        name=\"q\"\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder=\"Search Products....\"\n      ></Form.Control>\n      <Button className=\"p-2\" type=\"submit\" variant=\"outline-success\">\n        Search\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\nimport SearchBox from './SearchBox'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>ProShop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/orderList\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Proshop</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n        <meta name=\"description\" content={`${description}`} />\n        <meta name=\"keywords\" content={`${keywords}`} />\n      </Helmet>\n    </>\n  )\n}\n\nexport default Meta\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color: color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color: color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color: color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color: color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color: color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8c600',\n}\n\nRating.propTypes = {\n  value: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from '../components/Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant=\"top\"></Card.Img>\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n        <Card.Text as=\"div\">\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className=\"sr-only\">Loading....</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, isAdmin = false, keyword = '' }) {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST,\n    })\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n    })\n    const { data } = await axios.get(`/api/products/${id}`)\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      error:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { products, loading, error } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Carousel pause=\"hover\" className=\"bg-dark\">\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className=\"carousel-caption\">\n              <h2>\n                {product.name}(${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Meta from '../components/Meta'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loading from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport Message from '../components/Message'\nimport { listProducts } from '../actions/productActions'\nimport ProductCarousel from '../components/ProductCarousel'\n\nconst HomeScreen = ({ match }) => {\n  // search keyword and pageNumber from searchbox will be in match.keyword since its in link\n  const keyword = match.params.keyword\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n  const productList = useSelector((state) => state.productList)\n  const { products, pages, page, loading, error } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta\n        title=\"Welcome to ProShop | Home\"\n        description=\"Best products\"\n        keywords=\"electronics, buy electronics\"\n      />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to=\"/\" className=\"btn btn-light\">\n          Go Back\n        </Link>\n      )}\n      <h1>Latest products</h1>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { product, loading, error } = productDetails\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert('Review submitted')\n      setRating(0)\n      setComment('')\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n    dispatch(listProductDetails(match.params.id))\n  }, [match, dispatch, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating: rating,\n        comment: comment,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta\n            title={product.name}\n            description={product.description}\n            keywords={product.name}\n          />\n          <Row>\n            <Col md={6}>\n              <Image\n                src={product.image}\n                alt={product.name}\n                title={product.name}\n                fluid\n              />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={Number(product.rating)}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>{product.price}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'InStock' : 'Out of stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty:</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No reviews</Message>}\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select..</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"3\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type=\"submit\" variant=\"primary\">\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to=\"/login\">Sign in</Link>to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating\n                      value={review.rating}\n                      text={review.rating.toString()}\n                    />\n                    <p>{review.createdAt.substr(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty: qty,\n    },\n  })\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (formData) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: formData,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(formData))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>ShoppingCart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty! <Link to=\"/\">Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/products/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type=\"button\"\n                className=\"btn-black\"\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo, loading, error } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [userInfo, history, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          New Customer ?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : `/register`}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n\n  const { userInfo, loading, error } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [userInfo, history, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    // register dispatch\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match.')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmpassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account ?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : `/login`}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrder } from '../actions/orderAction'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { user, loading, error } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrder())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, userInfo, history, user])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    // register dispatch\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match.')\n    } else {\n      //   Update profile\n      dispatch(\n        updateUserProfile({\n          id: user._id,\n          name: name,\n          email: email,\n          password: password,\n        })\n      )\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading && <Loader />}\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmpassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table stripped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\" variant=\"light\">\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from '../constants/orderConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const listMyOrder = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get('/api/orders/myorders', config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get('/api/orders/', config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      saveShippingAddress({\n        address,\n        city,\n        postalCode,\n        country,\n      })\n    )\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter address\"\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter city\"\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter postal code\"\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter country\"\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = () => {\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"PayPal\"\n              name=\"paymentMethod\"\n              value=\"PayPal\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n\n            {/* <Form.Check\n              type=\"radio\"\n              label=\"Stripe\"\n              id=\"Stripe\"\n              name=\"paymentMethod\"\n              value=\"Stripe\"\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, ListGroup, Col, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderAction'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  //   Calculate price\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, error, success } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address: </strong>\n                {shippingAddress.address},{shippingAddress.city},\n                {shippingAddress.postalCode},{shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items: </h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your Cart is Empty!</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x {item.price} = $\n                          {Number(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary: </h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>$ {cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping: </Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>$ {cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>$ {cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems.length === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Card, Row, Col, ListGroup, Image, Button } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { deliverOrder, getOrderDetails, payOrder } from '../actions/orderAction'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n  ORDER_DETAILS_RESET,\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { success: successPay, loading: loadingPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { success: successDeliver, loading: loadingDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    const addToDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addToDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=INR`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successDeliver || successPay || orderId !== order._id) {\n      // Or prev page details will be shown if not resetted.\n      dispatch({ type: ORDER_DETAILS_RESET })\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [order, dispatch, orderId, successPay, successDeliver, userInfo, history])\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order.id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"danger\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"danger\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Your cart is empty!</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x {item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                      currency=\"INR\"\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type=\"button\"\n                      className=\"btn-block\"\n                      onClick={deliverHandler}\n                    >\n                      Mark As Deliver\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      // console.log('getting list of users.')\n      // console.log('before', users)\n      dispatch(listUsers())\n      // console.log('after', users)\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm(`Are you sure you want to delete User id: ${id}`)) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { user, loading, error } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    success: successUpdate,\n    loading: loadingUpdate,\n    error: errorUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [user, userId, dispatch, successUpdate, history])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group control=\"isAdmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n          </Form>\n        )}\n        <Button type=\"submit\" variant=\"primary\" onClick={submitHandler}>\n          Update\n        </Button>\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, pages, page } = productList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    success: successDelete,\n    loading: loadingDelete,\n    error: errorDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo.isAdmin) {\n      history.push('/')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    userInfo,\n    dispatch,\n    history,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const createProductHandler = () => {\n    //   create a product\n    dispatch(createProduct())\n  }\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      // Delete product\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport {\n  PRODUCT_DETAILS_RESET,\n  PRODUCT_UPDATE_RESET,\n} from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      // PRODUCT_DETAILS_RESET because after updating a product , you go to product list and again if u click same product edit button\n      // then it shows old values that's why reset it, so that next time when this component mounts it has empty {} object which causes\n      // product.name to be false when obj is empty and that causes dispatch to listProductDetails to be called.\n      dispatch({ type: PRODUCT_DETAILS_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [product, productId, dispatch, history, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    // Update a product.\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        description,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group control=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Image URL\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id=\"image-file\"\n                label=\"Choose a File\"\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group control=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group control=\"countInStock\">\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Count In Stock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group control=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group control=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n          </Form>\n        )}\n        <Button type=\"submit\" variant=\"primary\" onClick={submitHandler}>\n          Update\n        </Button>\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderAction'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL PRICE</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n          />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}